name: CI/CD

on:
  push:
    branches:
      - main

env:
  S3_BUCKET: 'scuba-member-management-front'
  DEFAULT_NODE_VERSION: '20.11.1'
  CACHED_DEPENDENCY_PATHS: ${{ github.workspace }}/.yarn/cache
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      dependency_cache_key: ${{ steps.compute_lockfile_hash.outputs.hash }}
      yarn_cache_dir_path: |
        ${{ steps.yarn-cache-dir-path.outputs.dir }}
        ${{ env.CACHED_DEPENDENCY_PATHS }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE_VERSION }}

      - name: Set up Yarn
        run: |
          npm install -g corepack
          corepack enable
          yarn --version
      
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Compute dependency cache key
        id: compute_lockfile_hash
        run: |
          HASH="${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}"
          echo "hash=$HASH" >> $GITHUB_OUTPUT

      - name: Check dependency cache
        uses: actions/cache@v4
        id: cache_dependencies
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ steps.compute_lockfile_hash.outputs.hash }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable
      
      - name: Build project
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy to S3
        run: aws s3 sync ./dist s3://${{ env.S3_BUCKET }} --delete

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

